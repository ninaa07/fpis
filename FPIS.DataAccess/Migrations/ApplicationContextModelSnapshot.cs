// <auto-generated />
using System;
using FPIS.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FPIS.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FPIS.Domain.Dobavljac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DrzavaId")
                        .HasColumnType("int");

                    b.Property<int>("GradId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RangId")
                        .HasColumnType("int");

                    b.Property<int>("UlicaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DrzavaId");

                    b.HasIndex("GradId");

                    b.HasIndex("RangId");

                    b.HasIndex("UlicaId");

                    b.ToTable("Dobavljac");
                });

            modelBuilder.Entity("FPIS.Domain.Drzava", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drzava");
                });

            modelBuilder.Entity("FPIS.Domain.Grad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DrzavaId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("FPIS.Domain.PackingLista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("DobavljacId")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("Tezina")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DobavljacId");

                    b.ToTable("PackingLista");
                });

            modelBuilder.Entity("FPIS.Domain.Proizvod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Proizvod");
                });

            modelBuilder.Entity("FPIS.Domain.Rang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Oznaka")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rang");
                });

            modelBuilder.Entity("FPIS.Domain.StavkaUlazneFakture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Iznos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("ProizvodId")
                        .HasColumnType("int");

                    b.Property<int>("UlaznaFakturaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProizvodId");

                    b.HasIndex("UlaznaFakturaId");

                    b.ToTable("StavkaUlazneFakture");
                });

            modelBuilder.Entity("FPIS.Domain.UlaznaFaktura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("Iznos")
                        .HasColumnType("int");

                    b.Property<int>("PackingListaId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tezina")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PackingListaId");

                    b.ToTable("UlaznaFaktura");
                });

            modelBuilder.Entity("FPIS.Domain.Ulica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DrzavaId")
                        .HasColumnType("int");

                    b.Property<int>("GradId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DrzavaId");

                    b.HasIndex("GradId");

                    b.ToTable("Ulica");
                });

            modelBuilder.Entity("FPIS.Domain.Dobavljac", b =>
                {
                    b.HasOne("FPIS.Domain.Drzava", "Drzava")
                        .WithMany("Dobavljaci")
                        .HasForeignKey("DrzavaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FPIS.Domain.Grad", "Grad")
                        .WithMany("Dobavljaci")
                        .HasForeignKey("GradId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FPIS.Domain.Rang", "Rang")
                        .WithMany("Dobavljaci")
                        .HasForeignKey("RangId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FPIS.Domain.Ulica", "Ulica")
                        .WithMany("Dobavljaci")
                        .HasForeignKey("UlicaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drzava");

                    b.Navigation("Grad");

                    b.Navigation("Rang");

                    b.Navigation("Ulica");
                });

            modelBuilder.Entity("FPIS.Domain.Grad", b =>
                {
                    b.HasOne("FPIS.Domain.Drzava", "Drzava")
                        .WithMany("Gradovi")
                        .HasForeignKey("DrzavaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Drzava");
                });

            modelBuilder.Entity("FPIS.Domain.PackingLista", b =>
                {
                    b.HasOne("FPIS.Domain.Dobavljac", "Dobavljac")
                        .WithMany("PackingListe")
                        .HasForeignKey("DobavljacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dobavljac");
                });

            modelBuilder.Entity("FPIS.Domain.StavkaUlazneFakture", b =>
                {
                    b.HasOne("FPIS.Domain.Proizvod", "Proizvod")
                        .WithMany("StavkeUlazneFakture")
                        .HasForeignKey("ProizvodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FPIS.Domain.UlaznaFaktura", "UlaznaFaktura")
                        .WithMany("StavkeUlazneFakture")
                        .HasForeignKey("UlaznaFakturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proizvod");

                    b.Navigation("UlaznaFaktura");
                });

            modelBuilder.Entity("FPIS.Domain.UlaznaFaktura", b =>
                {
                    b.HasOne("FPIS.Domain.PackingLista", "PackingLista")
                        .WithMany("UlazneFakture")
                        .HasForeignKey("PackingListaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PackingLista");
                });

            modelBuilder.Entity("FPIS.Domain.Ulica", b =>
                {
                    b.HasOne("FPIS.Domain.Drzava", "Drzava")
                        .WithMany()
                        .HasForeignKey("DrzavaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FPIS.Domain.Grad", "Grad")
                        .WithMany("Ulice")
                        .HasForeignKey("GradId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Drzava");

                    b.Navigation("Grad");
                });

            modelBuilder.Entity("FPIS.Domain.Dobavljac", b =>
                {
                    b.Navigation("PackingListe");
                });

            modelBuilder.Entity("FPIS.Domain.Drzava", b =>
                {
                    b.Navigation("Dobavljaci");

                    b.Navigation("Gradovi");
                });

            modelBuilder.Entity("FPIS.Domain.Grad", b =>
                {
                    b.Navigation("Dobavljaci");

                    b.Navigation("Ulice");
                });

            modelBuilder.Entity("FPIS.Domain.PackingLista", b =>
                {
                    b.Navigation("UlazneFakture");
                });

            modelBuilder.Entity("FPIS.Domain.Proizvod", b =>
                {
                    b.Navigation("StavkeUlazneFakture");
                });

            modelBuilder.Entity("FPIS.Domain.Rang", b =>
                {
                    b.Navigation("Dobavljaci");
                });

            modelBuilder.Entity("FPIS.Domain.UlaznaFaktura", b =>
                {
                    b.Navigation("StavkeUlazneFakture");
                });

            modelBuilder.Entity("FPIS.Domain.Ulica", b =>
                {
                    b.Navigation("Dobavljaci");
                });
#pragma warning restore 612, 618
        }
    }
}
